var searchIndex = new Map(JSON.parse('[\
["ptx_builder",{"t":"QCCCCCPFGFGPPPPGPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOGPPPPFPPPPPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOFKEENNNNNMNMNMNMNNCNNNFFNNNNNNNNNNNNOONNNNNNNNNEEEEEEEFFNNNNNNNNNNNNNNNNNNNN","n":["bail","builder","error","executable","prelude","reporter","Binary","BuildOutput","BuildStatus","Builder","CrateType","Debug","Human","Json","Library","MessageFormat","NotNeeded","Profile","Release","Short","Success","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_live","clone","clone","clone","clone_into","clone_into","clone_into","dependencies","disable_colors","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_assembly_path","get_crate_name","into","into","into","into","into","into","is_build_needed","new","set_crate_type","set_message_format","set_prefix","set_profile","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ansi","render_diagnostics","short","BuildErrorKind","BuildFailed","CommandFailed","CommandNotFound","CommandVersionNotFulfilled","Error","InternalError","InvalidCratePath","InvalidCrateType","MissingCrateType","OtherError","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","context","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","kind","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","code","command","command","command","current","hint","hint","required","stderr","Cargo","Executable","ExecutableRunner","Output","borrow","borrow_mut","from","get_current_version","get_current_version","get_name","get_name","get_required_version","get_required_version","get_verification_hint","get_verification_hint","get_version_hint","get_version_hint","into","runner","try_from","try_into","type_id","ExecutableRunner","Output","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","new","run","run_live","stderr","stdout","try_from","try_from","try_into","try_into","type_id","type_id","with_args","with_cwd","with_env","BuildStatus","Builder","CargoAdapter","CrateType","ErrorLogPrinter","MessageFormat","Profile","CargoAdapter","ErrorLogPrinter","borrow","borrow","borrow_mut","borrow_mut","build","disable_colors","fmt","from","from","into","into","print","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_env_var"],"q":[[0,"ptx_builder"],[6,"ptx_builder::builder"],[100,"ptx_builder::builder::MessageFormat"],[103,"ptx_builder::error"],[146,"ptx_builder::error::BuildErrorKind"],[155,"ptx_builder::executable"],[177,"ptx_builder::executable::runner"],[202,"ptx_builder::prelude"],[209,"ptx_builder::reporter"],[231,"core::ops::function"],[232,"std::path"],[233,"alloc::vec"],[234,"core::fmt"],[235,"core::convert"],[236,"alloc::string"],[237,"core::result"],[238,"core::any"],[239,"core::error"],[240,"core::option"],[241,"semver"],[242,"std::ffi::os_str"],[243,"core::iter::traits::collect"]],"i":[0,0,0,0,0,0,10,0,0,0,0,8,9,9,10,0,4,0,8,9,4,3,12,4,8,9,10,3,12,4,8,9,10,3,3,8,9,10,8,9,10,12,3,8,9,8,8,8,9,9,9,3,12,4,8,8,9,10,3,12,4,8,9,10,12,3,3,12,4,8,9,10,3,3,3,3,3,3,8,9,10,8,3,12,4,8,9,10,3,12,4,8,9,10,3,12,4,8,9,10,39,39,39,0,23,23,23,23,0,23,23,23,23,23,0,24,23,24,23,23,23,24,23,23,23,23,24,24,23,23,24,24,23,24,23,24,24,23,24,23,24,23,24,23,24,23,40,41,40,42,42,41,42,42,40,0,0,0,0,29,29,29,27,29,27,29,27,29,27,29,27,29,29,0,29,29,29,0,0,32,31,32,31,31,32,31,32,31,32,32,32,31,31,32,31,32,31,32,31,32,32,32,0,0,0,0,0,0,0,0,0,36,38,36,38,36,38,38,36,38,36,38,38,38,36,38,36,38,36,38,36],"f":"`````````````````````{{{b{c}}}{{b{e}}}{}{}}00000{{{b{dc}}}{{b{de}}}{}{}}00000{{{b{f}}}{{j{h}}}}{{{b{f}}ce}{{j{h}}}{{n{{b{l}}}}}{{n{{b{l}}}}}}{{{b{A`}}}A`}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{{b{c}}{b{de}}}Af{}{}}00{{{b{Ah}}}{{j{{Al{Aj}}}}}}{ff}{{{b{A`}}{b{A`}}}An}{{{b{Ab}}{b{Ab}}}An}{{{b{c}}{b{e}}}An{}{}}00000{{{b{f}}{b{dB`}}}Bb}{{{b{Ah}}{b{dB`}}}Bb}{{{b{h}}{b{dB`}}}Bb}{{{b{A`}}{b{dB`}}}Bb}0{{{b{Ab}}{b{dB`}}}Bb}{{{b{Ad}}{b{dB`}}}Bb}{cc{}}00000{{{b{Ah}}}Aj}{{{b{f}}}{{b{l}}}}{ce{}{}}00000{{}An}{c{{j{f}}}{{Bf{Bd}}}}{{fAd}f}{{fAb}f}{{fBh}f}{{fA`}f}{{{b{c}}}e{}{}}00{{{b{c}}}Bh{}}{c{{Bj{e}}}{}{}}00000000000{{{b{c}}}Bl{}}00000```````````````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Bn}}}Bn}{{{b{c}}{b{de}}}Af{}{}}{{C`Bn}C`}{{{b{Bn}}{b{Bn}}}An}{{{b{c}}{b{e}}}An{}{}}00{{{b{C`}}{b{dB`}}}Bb}0{{{b{Bn}}{b{dB`}}}Bb}0{cc{}}{BnC`}1{ce{}{}}0{{{b{C`}}}{{b{Bn}}}}{{{b{C`}}}{{Cd{{b{Cb}}}}}}{{{b{c}}}e{}{}}{{{b{c}}}Bh{}}0{c{{Bj{e}}}{}{}}000{{{b{c}}}Bl{}}0`````````````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}:{{{b{Cf}}}{{j{Ch}}}}{{{b{Cj}}}{{j{Ch}}}}{{{b{Cf}}}Bh}{{{b{Cj}}}Bh}{{{b{Cf}}}{{Cd{Cl}}}}{{{b{Cj}}}{{Cd{Cl}}}}3232>`998``7766{{{b{Cn}}{b{dB`}}}Bb}{cc{}}0{ce{}{}}0{c{{D`{c}}}Cf}{{{b{d{D`{c}}}}}{{j{Cn}}}Cf}{{{b{d{D`{c}}}}eg}{{j{Cn}}}Cf{{n{{b{l}}}}}{{n{{b{l}}}}}}``????>>{{{b{d{D`{c}}}}g}{{b{d{D`{c}}}}}Cf{{Bf{Db}}}{{Df{}{{Dd{e}}}}}}{{{b{d{D`{c}}}}e}{{b{d{D`{c}}}}}Cf{{Bf{Bd}}}}{{{b{d{D`{c}}}}eg}{{b{d{D`{c}}}}}Cf{{Bf{Db}}}{{Bf{Db}}}}`````````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Dh}}f}Dj}{{{b{dDl}}}{{b{dDl}}}}{{{b{Dl}}{b{dB`}}}Bb}<<;;{C`Dl}{{{b{c}}}Bh{}}{c{{Bj{e}}}{}{}}000{{{b{c}}}Bl{}}0{cDh{{Bf{l}}}}","D":"Ib","p":[[1,"reference"],[0,"mut"],[5,"Builder",6],[6,"BuildStatus",6],[8,"Result",103],[1,"str"],[10,"FnMut",231],[6,"Profile",6],[6,"MessageFormat",6],[6,"CrateType",6],[1,"unit"],[5,"BuildOutput",6],[5,"PathBuf",232],[5,"Vec",233],[1,"bool"],[5,"Formatter",234],[8,"Result",234],[5,"Path",232],[10,"AsRef",235],[5,"String",236],[6,"Result",237],[5,"TypeId",238],[6,"BuildErrorKind",103],[5,"Error",103],[10,"Error",239],[6,"Option",240],[10,"Executable",155],[5,"Version",241],[5,"Cargo",155],[5,"VersionReq",241],[5,"Output",177],[5,"ExecutableRunner",177],[5,"OsStr",242],[17,"Item"],[10,"IntoIterator",243],[5,"CargoAdapter",209],[1,"never"],[5,"ErrorLogPrinter",209],[15,"Json",100],[15,"CommandFailed",146],[15,"CommandNotFound",146],[15,"CommandVersionNotFulfilled",146]],"r":[[157,177],[158,177],[202,6],[203,6],[204,209],[205,6],[206,209],[207,6],[208,6]],"b":[[54,"impl-Debug-for-Profile"],[55,"impl-Display-for-Profile"],[126,"impl-Debug-for-Error"],[127,"impl-Display-for-Error"],[128,"impl-Debug-for-BuildErrorKind"],[129,"impl-Display-for-BuildErrorKind"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJ4AFQABAAAABwAAAA8AAAAWAAsAJAAFACwADgBPABUAaAAaAIQAAACIABMAngADAKQAAACmAAAAqAAAAKoAAACsAAAArgAKAL0AFADUAAMA2gAAAOAABgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
