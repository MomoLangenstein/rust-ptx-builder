searchState.loadedDescShard("ptx_builder", 0, "ptx-builder   CI Status MSRV Rust Doc\nBuild helpers.\nError handling.\nExternal executables that are needed to build CUDA crates.\nConvenient re-exports of mostly used types.\nBuild reporting helpers.\nSuccessful build output.\nNon-failed build status.\nCore of the crate - PTX assembly build controller.\nBuild specified crate type.\nEquivalent for <code>cargo-build</code> <strong>without</strong> <code>--release</code> flag.\nEquivalent for <code>cargo-build</code> with <code>--message-format=human</code> flag\nEquivalent for <code>cargo-build</code> with <code>--message-format=json</code> flag\nMessage format.\nThe CUDA crate building is not needed. Can happend in …\nDebug / Release profile.\nEquivalent for <code>cargo-build</code> <strong>with</strong> <code>--release</code> flag.\nEquivalent for <code>cargo-build</code> with <code>--message-format=short</code> flag\nThe CUDA crate building was performed without errors.\nPerforms an actual build: runs <code>cargo</code> with proper flags and …\nPerforms an actual build: runs <code>cargo</code> with proper flags and …\nReturns a list of crate dependencies.\nDisable colors for internal calls to <code>cargo</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns path to PTX assembly file.\nReturns the name of the source crate at the construction …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns bool indicating whether the actual build is needed.\nConstruct a builder for device crate at <code>path</code>.\nSet crate type that needs to be built.\nSet the message format.\nSet the build command prefix.\nSet build profile.\nWhether the <code>rendered</code> field of rustc diagnostics embed ansi …\nWhether rustc diagnostics are rendered by cargo or …\nWhether the <code>rendered</code> field of rustc diagnostics are using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>cargo</code> command.\nDetails and requirements for executables.\nReturns the argument unchanged.\nReturns the current version of the executable.\nReturns executable name in <code>PATH</code>.\nExecutable version constraint.\nReturns message about how to install missing executable.\nReturns message about how to update outdated executable.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCargo integration adapter.\nNice error log printer.\nRuns build process and reports artifacts to Cargo.\nControls whether colors should be used in the error log.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates instance of the printer.\nCreates an instance of the adapter that will provide PTX …")