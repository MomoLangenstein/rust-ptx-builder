name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          target: nvptx64-nvidia-cuda
          components: llvm-bitcode-linker, llvm-tools
          override: true

      - name: Check all workspace targets
        run: cargo check --workspace --all-targets

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          target: nvptx64-nvidia-cuda
          components: llvm-bitcode-linker, llvm-tools
          override: true
      
      - name: Run the test-suite
        run: cargo test --workspace --no-fail-fast

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true

      - name: Check the code formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          components: clippy
          components: llvm-bitcode-linker, llvm-tools
          override: true

      - name: Check all workspace targets
        run: cargo clippy --workspace --all-targets -- -D warnings
